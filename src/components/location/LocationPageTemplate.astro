---
import BaseLayout from '../../layouts/BaseLayout.astro';

interface Cta {
  label: string;
  href: string;
}

interface HeroContent {
  eyebrow?: string;
  heading?: string;
  description: string;
  cta?: Cta;
  secondaryCta?: Cta;
}

interface SellingPoints {
  heading: string;
  points: string[];
}

interface ServiceItem {
  name: string;
  description: string;
}

interface ServicesSection {
  heading: string;
  intro?: string;
  items: ServiceItem[];
}

interface InternalLinkItem {
  label: string;
  href: string;
  description: string;
}

interface InternalLinksSection {
  heading: string;
  description?: string;
  links: InternalLinkItem[];
}

interface TextSection {
  heading: string;
  paragraphs: string[];
}

interface FaqItem {
  question: string;
  answer: string;
}

interface FaqSection {
  heading?: string;
  items: FaqItem[];
}

interface NeighbourhoodsSection {
  heading: string;
  description?: string;
  areas: string[];
}

interface ClosingSection {
  heading: string;
  paragraphs: string[];
  primaryCta: Cta;
  secondaryCta?: Cta;
}

interface Props {
  townName: string;
  county: string;
  postalCode?: string;
  pageTitle: string;
  metaDescription: string;
  canonicalPath: string;
  hero: HeroContent;
  intro: string[];
  sellingPoints?: SellingPoints;
  services: ServicesSection;
  internalLinks: InternalLinksSection;
  localInsights: TextSection;
  additionalInsights?: TextSection[];
  faqs: FaqSection;
  neighbourhoods?: NeighbourhoodsSection;
  closing: ClosingSection;
}

const {
  townName,
  county,
  postalCode,
  pageTitle,
  metaDescription,
  canonicalPath,
  hero,
  intro,
  sellingPoints,
  services,
  internalLinks,
  localInsights,
  additionalInsights = [],
  faqs,
  neighbourhoods,
  closing,
} = Astro.props as Props;

const normalizedPath = canonicalPath.replace(/^\/+/, '').replace(/\/+$/, '');
const canonicalFile = normalizedPath.endsWith('.html')
  ? normalizedPath
  : `${normalizedPath}.html`;
const canonicalUrl = `https://www.lembuildingsurveying.co.uk/${canonicalFile}`;
const heroHeading = hero.heading ?? `Home & Building Surveys in ${townName}`;
const heroDescription = hero.description;
const heroEyebrow = hero.eyebrow ?? 'Local RICS Surveyors';
const heroCta = hero.cta ?? { label: 'Request a Quote', href: '/enquiry.html' };
const heroSecondaryCta = hero.secondaryCta;

const getBreadcrumbSchema = () =>
  JSON.stringify({
    '@context': 'https://schema.org',
    '@type': 'BreadcrumbList',
    itemListElement: [
      {
        '@type': 'ListItem',
        position: 1,
        name: 'Home',
        item: 'https://www.lembuildingsurveying.co.uk/',
      },
      {
        '@type': 'ListItem',
        position: 2,
        name: 'Areas We Cover',
        item: 'https://www.lembuildingsurveying.co.uk/local-surveys.html',
      },
      {
        '@type': 'ListItem',
        position: 3,
        name: townName,
        item: canonicalUrl,
      },
    ],
  });

const areaServedList = [townName, ...(neighbourhoods?.areas ?? [])];

const getLocalBusinessSchema = () =>
  JSON.stringify({
    '@context': 'https://schema.org',
    '@type': 'LocalBusiness',
    name: 'LEM Building Surveying Ltd',
    url: canonicalUrl,
    image: 'https://www.lembuildingsurveying.co.uk/logo-sticker.png',
    telephone: '+447378732037',
    address: {
      '@type': 'PostalAddress',
      addressLocality: townName,
      addressRegion: county,
      ...(postalCode ? { postalCode } : {}),
      addressCountry: 'GB',
    },
    areaServed: areaServedList.map((area) => `${area}, ${county}`),
    description: metaDescription,
  });

const getFaqSchema = () =>
  faqs?.items?.length
    ? JSON.stringify({
        '@context': 'https://schema.org',
        '@type': 'FAQPage',
        mainEntity: faqs.items.map((faq) => ({
          '@type': 'Question',
          name: faq.question,
          acceptedAnswer: {
            '@type': 'Answer',
            text: faq.answer,
          },
        })),
      })
    : null;

const structuredData = {
  breadcrumb: getBreadcrumbSchema(),
  localBusiness: getLocalBusinessSchema(),
  faq: getFaqSchema(),
};
---
<BaseLayout pageId="location-page">
  <Fragment slot="head">
    <title>{pageTitle}</title>
    <meta name="description" content={metaDescription} />
    <link rel="canonical" href={canonicalUrl} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={metaDescription} />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:image" content="https://www.lembuildingsurveying.co.uk/logo-sticker.png" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={pageTitle} />
    <meta name="twitter:description" content={metaDescription} />
    <meta name="twitter:url" content={canonicalUrl} />
    <meta name="twitter:image" content="https://www.lembuildingsurveying.co.uk/logo-sticker.png" />
    <script type="application/ld+json" is:inline>{structuredData.localBusiness}</script>
    <script type="application/ld+json" is:inline>{structuredData.breadcrumb}</script>
    {structuredData.faq ? <script type="application/ld+json" is:inline>{structuredData.faq}</script> : null}
  </Fragment>

  <section class="hero-plain location-hero">
    <div class="hero-container">
      {heroEyebrow ? <p class="location-eyebrow">{heroEyebrow}</p> : null}
      <h1>{heroHeading}</h1>
      <p class="location-hero-description">{heroDescription}</p>
      <div class="button-group">
        <a class="cta-button" href={heroCta.href}>{heroCta.label}</a>
        {heroSecondaryCta ? (
          <a class="secondary-button" href={heroSecondaryCta.href}>{heroSecondaryCta.label}</a>
        ) : null}
      </div>
    </div>
  </section>

  <section class="location-section">
    <div class="box-container location-layout">
      <article class="location-main">
        {intro?.length ? (
          <div class="location-intro">
            {intro.map((paragraph) => (
              <p>{paragraph}</p>
            ))}
          </div>
        ) : null}

        {services?.items?.length ? (
          <div class="location-services">
            <h2>{services.heading}</h2>
            {services.intro ? <p>{services.intro}</p> : null}
            <ul>
              {services.items.map((service) => (
                <li>
                  <strong>{service.name}:</strong> {service.description}
                </li>
              ))}
            </ul>
          </div>
        ) : null}

        {localInsights?.paragraphs?.length ? (
          <div class="location-insights">
            <h2>{localInsights.heading}</h2>
            {localInsights.paragraphs.map((paragraph) => (
              <p>{paragraph}</p>
            ))}
          </div>
        ) : null}

        {additionalInsights?.length
          ? additionalInsights.map((section) => (
              <div class="location-insights">
                <h2>{section.heading}</h2>
                {section.paragraphs.map((paragraph) => (
                  <p>{paragraph}</p>
                ))}
              </div>
            ))
          : null}

        {internalLinks?.links?.length ? (
          <div class="location-internal-links">
            <h2>{internalLinks.heading}</h2>
            {internalLinks.description ? <p>{internalLinks.description}</p> : null}
            <ul>
              {internalLinks.links.map((link) => (
                <li>
                  <a href={link.href}>{link.label}</a> â€” {link.description}
                </li>
              ))}
            </ul>
          </div>
        ) : null}

        {faqs?.items?.length ? (
          <div class="location-faq">
            <h2>{faqs.heading ?? `${townName} survey FAQs`}</h2>
            <div class="faq-items">
              {faqs.items.map((faq) => (
                <details>
                  <summary>{faq.question}</summary>
                  <p>{faq.answer}</p>
                </details>
              ))}
            </div>
          </div>
        ) : null}
      </article>

      <aside class="location-sidebar">
        {sellingPoints?.points?.length ? (
          <div class="location-card">
            <h2>{sellingPoints.heading}</h2>
            <ul>
              {sellingPoints.points.map((point) => (
                <li>{point}</li>
              ))}
            </ul>
          </div>
        ) : null}

        {neighbourhoods?.areas?.length ? (
          <div class="location-card">
            <h2>{neighbourhoods.heading}</h2>
            {neighbourhoods.description ? <p>{neighbourhoods.description}</p> : null}
            <ul>
              {neighbourhoods.areas.map((area) => (
                <li>{area}</li>
              ))}
            </ul>
          </div>
        ) : null}

        <div class="location-card">
          <h2>Talk to Liam</h2>
          <p>
            Call <a href="tel:07378732037">07378 732037</a> or <a href="/enquiry.html">request a call back</a> for
            friendly advice.
          </p>
        </div>
      </aside>
    </div>
  </section>

  <section class="location-section">
    <div class="box-container location-cta">
      <h2>{closing.heading}</h2>
      {closing.paragraphs.map((paragraph) => (
        <p>{paragraph}</p>
      ))}
      <div class="button-group">
        <a class="cta-button" href={closing.primaryCta.href}>{closing.primaryCta.label}</a>
        {closing.secondaryCta ? (
          <a class="secondary-button" href={closing.secondaryCta.href}>{closing.secondaryCta.label}</a>
        ) : null}
      </div>
    </div>
  </section>
</BaseLayout>
