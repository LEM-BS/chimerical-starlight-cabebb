---
import ThemeToggle from './ThemeToggle.astro';

const normalizePath = (path: string = '/') => {
  if (!path) return '/';
  const url = new URL(path, Astro.site ?? 'https://example.invalid');
  let normalized = url.pathname.replace(/index\.html$/i, '');
  normalized = normalized.replace(/\.html$/i, '');
  if (normalized.length > 1 && normalized.endsWith('/')) {
    normalized = normalized.slice(0, -1);
  }
  return normalized || '/';
};

const currentPath = normalizePath(Astro.url.pathname);

type NavLink = { href: string; label: string; isCta?: boolean };

const primaryLinks: NavLink[] = [
  { href: '/', label: 'Home' },
  { href: '/rics-home-surveys', label: 'RICS Home Surveys' },
];

const ctaLinks: NavLink[] = [
  { href: '/', label: 'Home' },
  { href: '/rics-home-surveys', label: 'RICS Home Surveys' },
  { href: '/damp-surveys-index', label: 'Damp Surveys' },
  { href: '/quote', label: 'Instant Estimate', isCta: true },
];

const secondaryLinks: NavLink[] = [
  { href: '/services', label: 'Services' },
  { href: '/damp-surveys-index', label: 'Damp', isCta: true },
  { href: '/local-surveys', label: 'Areas We Cover' },
  { href: '/quote', label: 'Instant estimate' },
  { href: '/testimonials', label: 'Testimonials' },
  { href: '/contact', label: 'Contact' },
  { href: '/enquiry', label: 'Get a Quote', isCta: true },
];

const isActive = (href: string) => {
  const normalized = normalizePath(href);
  if (normalized === '/') {
    return currentPath === '/';
  }
  if (currentPath === normalized) {
    return true;
  }
  return currentPath.startsWith(`${normalized}/`);
};
---

<div class="header-inner container">
  <div class="branding">
      <a href="/" class="logo-link" aria-label="LEM Building Surveying Ltd home">
        <picture>
          <source srcset="/logo-sticker.webp" type="image/webp" />
          <img
            src="/logo-sticker.png"
            alt="LEM Building Surveying Ltd logo"
            class="logo"
            width="90"
            height="60"
            decoding="async"
            fetchpriority="high"
          />
        </picture>
      </a>
    </div>
  <nav class="main-nav" aria-label="Main Navigation">
    <ul class="cta-links">
      {ctaLinks.map(({ href, label, isCta }) => (
        <li>
          <a
            href={href}
            aria-current={isActive(href) ? 'page' : undefined}
            class:list={{ cta: isCta }}
          >
            {label}
          </a>
        </li>
      ))}
    </ul>
    <button
      class="nav-toggle"
      type="button"
      aria-label="Menu"
      aria-expanded="false"
      aria-controls="nav-links"
    >
      Menu
    </button>
    <div class="theme-toggle-control">
      <ThemeToggle />
    </div>
    <div class="nav-links" id="nav-links">
      <ul class="primary-links">
        {primaryLinks.map(({ href, label }) => (
          <li>
            <a href={href} aria-current={isActive(href) ? 'page' : undefined}>
              {label}
            </a>
          </li>
        ))}
      </ul>
      <ul class="secondary-links">
        {secondaryLinks.map(({ href, label, isCta }) => (
          <li>
            <a
              href={href}
              aria-current={isActive(href) ? 'page' : undefined}
              class:list={{ cta: isCta }}
            >
              {label}
            </a>
          </li>
        ))}
      </ul>
    </div>
  </nav>
</div>
